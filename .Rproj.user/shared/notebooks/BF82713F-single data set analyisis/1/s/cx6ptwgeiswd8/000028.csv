"0","inputdata <- read_xlsx(""inputdata.xlsx"", sheet = ""AZD"") #""HG6-64-1"")"
"0",""
"0","randomizer = ""range.randomizer_2.R"""
"0","x <- pull(inputdata,1)"
"0","y <- pull(inputdata,2)"
"0","ActiveName <- as.vector(colnames(inputdata[,2]))"
"0",""
"0","testdata <- as.data.frame(cbind(x,y))"
"0","colnames"
"1","function (x, do.NULL = TRUE, prefix = ""col"") 
"
"1","{
"
"1","    if (is.data.frame(x) && do.NULL) 
"
"1","        return(names(x))
"
"1","    dn <- dimnames(x)
"
"1","    if (!is.null(dn[[2L]])) 
"
"1","        dn[[2L]]
"
"1","    else {
"
"1","        nc <- NCOL(x)
"
"1","        if (do.NULL) 
"
"1","            NULL
"
"1","        else if (nc > 0L) 
"
"1","            paste0(prefix, seq_len(nc))
"
"1","        else character()
"
"1","    }
"
"1","}
"
"1","<bytecode: 0x556209b20210>
"
"1","<environment: namespace:base>
"
"0","{#Biphasic Model Regression Calculations ------------------------"
"0","  #inputs"
"0","  activefunction <- function(x) {1-a*x/(b+x) -(1-a)*x/(c+x)}"
"0","  biphasic.function <- activefunction"
"0","  z <- c(0:12)  #iterations"
"0","  s <- 8       #Number of subdivisions to do during regression"
"0","  a <- c(0,1)  #F1 term"
"0","  b <- c(0,10) #Kd1"
"0","  c <- c(0,10) #Kd2"
"0","  d <- NA #currently the offset for when Imax is reached"
"0","}"
"0","source(file = ""dirtyregression.R"", local = TRUE)"
"0",""
"0","{#outputs"
"0","  biphasic.results <- results[order(results$RMSEscore), ] [1,]"
"0","  a <- as.numeric(biphasic.results$a)"
"0","  b <- as.numeric(biphasic.results$b)"
"0","  c <- as.numeric(biphasic.results$c)"
"0","  RMSE <- as.numeric(biphasic.results$RMSEscore)"
"0","}"
"0","{#Calculate IC50"
"0","  tempterm <- 0.5*(2*a*b - b - 2*a*c + c + sqrt((-2*a*b + b + 2*a*c - c)^2 + 4*b*c))"
"0","  tempterm2 <- 0.5*(2*a*b - b - 2*a*c + c - sqrt((-2*a*b + b + 2*a*c - c)^2 + 4*b*c))"
"0","  IC50 <- max(tempterm, tempterm2)"
"0","}"
"0",""
"0","n <- max(length(x), length(y), length(tempvector))"
"0","length(x) <- n                      "
"0","length(y) <- n"
"0","length(tempvector) <- n"
"0",""
"0","tempdata <- tempvector"
"0","tempdata <- cbind(tempdata, x)"
"0","tempdata <- as.data.frame(cbind(tempdata, y))"
"0","tempterm <- paste(""~/Desktop/plots/"", ActiveName, ""_Data.csv"", sep = """")"
"0",""
"0","write.csv(tempdata, file = tempterm)"
"0",""
"0","#Graph Function"
"0","temptext <- paste(ActiveName, ""Biphasic Minimalization"", sep = "" "")"
"0","biphasic.results <- paste(""BiphasicModel: "", ""F1="", round(a, digits = 4) , "", Kd1="", round(b, digits = 4), "", Kd2="", round(c, digits = 4), "" Offset="", d, "", RMSE="", round(RMSE, digits = 4), "", IC50="", round(IC50, digits = 4), sep = """")"
"0",""
"0","x <- pull(inputdata,1)"
"0","y <- pull(inputdata,2)"
"0","testdata <- as.data.frame(cbind(x,y))"
"0",""
"0","tempterm <- max(max(x), IC50)"
"0","ggplot(data = testdata, aes(x = x, y = y)) +"
"0","  geom_point()+"
"0","  geom_function(fun = biphasic.function)+ "
"0","  scale_x_continuous(trans = ""log10"")+"
"0","  labs(title = temptext, x = ""lnCONC"", y = ""Relative Viability"") +"
"0","  annotate(geom = ""text"", x = 1 ,  y=1.5, label = str_wrap(biphasic.results, 50))+"
"0","  ylim(0, 1.5)+"
"0","  ggsave(plot = last_plot(), filename = paste(ActiveName, ""Biphasic_Minimalization_Plot.png"", sep = """"), width = 10, height = 10, device = NULL)"
